name: Release
on:
  release:
    types: [created]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [ lts/*, 16]
        #can't test on 5.6.42 because database is too up-to-date ( 5.12.72 )
        unifi-version: [ latest, version-6.0.23, version-6.0.28, version-6.0.36, version-6.0.41, version-6.0.43, version-6.0.45 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: install+run docker-unifi-controller
        run: |
          # install our own demo database
          mkdir unifi-storage
          sudo tar -C unifi-storage -xf $GITHUB_WORKSPACE/.github/workflows/db-demo-dump.tar.bz2
          # create docker-unifi-controller
          docker create --name=unifi-controller -e PUID=1001 -e PGID=116 -e MEM_LIMIT=1024M -p 8443:8443 -v $GITHUB_WORKSPACE/unifi-storage:/config linuxserver/unifi-controller:${{ matrix.unifi-version }}
          docker start unifi-controller
          # wait for unifi-controller to be ready
          while ! curl -ks https://127.0.0.1:8443; do echo waiting for unifi-controller; sleep 2; done
          echo unifi-controller answer
      - name: npm install, build, and test
        run: |
          yarn install
          yarn build
          echo start tests
          yarn run test:CI:coverage
        env:
          CI: true

  deploy-npm:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      - run: npm install
        env:
          CI: true
      - run: npm publish --access public
        name: publish on npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-GPR:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: lts/*
          registry-url: 'https://npm.pkg.github.com'
          scope: ${{ github.repository_owner }}
      - run: npm install
        env:
          CI: true
      - run: npx npe name @${{ github.event.repository.full_name }}
        name: change scope name
      - run: npm publish --access public --registry https://npm.pkg.github.com
        name: publish on GPR
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

